# Generated by Django 5.2 on 2025-05-18 08:48

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('grains', 'Grains'), ('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('meat', 'Meat'), ('dairy', 'Dairy'), ('other', 'Other')], default='other', max_length=50)),
                ('default_unit', models.CharField(choices=[('kg', 'Kilogram (kg)'), ('g', 'Gram (g)'), ('piece', 'Piece'), ('bunch', 'Bunch'), ('liter', 'Liter'), ('ml', 'Milliliter')], default='kg', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Commodities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketPriceResearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('market', 'Market place'), ('processor', 'Processor'), ('kiosk', 'Kiosk'), ('farm', 'Farm'), ('store', 'Retail Store'), ('distributor', 'Distributor'), ('other', 'Other')], default='market', max_length=50)),
                ('source_name', models.CharField(default='Unknown Source', max_length=200)),
                ('product_name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('unit', models.CharField(choices=[('kg', 'Kilogram (kg)'), ('bunch', 'Bunch'), ('piece', 'Piece'), ('crate', 'Crate'), ('kiroba', 'Kiroba'), ('sado', 'Sado'), ('fungu', 'Fungu'), ('g', 'Gram (g)'), ('liter', 'Liter'), ('ml', 'Milliliter')], max_length=50)),
                ('date_observed', models.DateTimeField(default=django.utils.timezone.now)),
                ('region', models.CharField(default='', max_length=100)),
                ('country', models.CharField(default='Tanzania', max_length=100)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('quality_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Excellent')], null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('rainfall', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CONFLICT', 'Conflict')], max_length=20)),
                ('response', models.JSONField(blank=True, help_text='Server response or error message', null=True)),
            ],
            options={
                'ordering': ['-sync_time'],
            },
        ),
        migrations.CreateModel(
            name='UnsyncedData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_id', models.CharField(help_text='Unique identifier of the device that collected the data', max_length=255)),
                ('data_type', models.CharField(choices=[('price', 'Price Research'), ('sale', 'Sales Data'), ('stock_update', 'Stock Update')], max_length=20)),
                ('payload', models.JSONField(help_text='The actual data to be synchronized')),
                ('sync_status', models.CharField(choices=[('PENDING', 'Pending'), ('SYNCING', 'Syncing'), ('SYNCED', 'Synced'), ('FAILED', 'Failed'), ('CONFLICT', 'Conflict')], default='PENDING', max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='When the data was initially created')),
                ('last_attempt', models.DateTimeField(blank=True, help_text='Last sync attempt', null=True)),
                ('retry_count', models.PositiveSmallIntegerField(default=0, help_text='Number of sync attempts')),
                ('error_message', models.TextField(blank=True, help_text='Error details if sync fails', null=True)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
