# Generated by Django 5.2 on 2025-05-18 08:48

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
        ('market_research', '0001_initial'),
        ('marketplace', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BenefitedPhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.CharField(max_length=15, unique=True)),
                ('benefited_timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('firstName', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('lastName', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('BUSINESS', 'Business'), ('CUSTOMER', 'Customer'), ('AGENT', 'Agent')], default='CUSTOMER', max_length=10)),
                ('phoneNumber', models.CharField(max_length=15, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(choices=[('CARDS', 'Card Management'), ('FINANCE', 'Finance'), ('CUSTOMER', 'Customer Service'), ('TECH', 'Technical Support'), ('SUPER', 'Super Admin')], max_length=100)),
                ('access_level', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.CharField(max_length=20, unique=True)),
                ('national_id', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('total_submissions', models.PositiveIntegerField(default=0)),
                ('approved_submissions', models.PositiveIntegerField(default=0)),
                ('rejected_submissions', models.PositiveIntegerField(default=0)),
                ('submission_quality_score', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('payment_method', models.CharField(choices=[('MOBILE_MONEY', 'Mobile Money'), ('BANK', 'Bank Transfer'), ('CASH', 'Cash')], default='MOBILE_MONEY', max_length=50)),
                ('mobile_money_number', models.CharField(blank=True, max_length=15, null=True)),
                ('payment_account_details', models.TextField(blank=True, null=True)),
                ('assigned_markets', models.ManyToManyField(blank=True, related_name='assigned_agents', to='market_research.market')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=100)),
                ('business_address', models.TextField()),
                ('business_description', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('business_type', models.CharField(choices=[('farmer', 'Farmer / Producer'), ('processor', 'Food Processor'), ('wholesaler', 'Wholesaler'), ('retailer', 'Retailer / Shop')], default='retailer', max_length=20)),
                ('business_logo', models.ImageField(blank=True, null=True, upload_to='business_logos/')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('business_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('business_hours', models.CharField(blank=True, help_text="e.g., 'Mon-Fri: 9AM-5PM, Sat: 10AM-3PM'", max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('business_categories', models.ManyToManyField(blank=True, related_name='businesses', to='marketplace.category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreditEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('REPAYMENT', 'Successful Repayment'), ('LATE_PAYMENT', 'Late Payment'), ('MISSED_PAYMENT', 'Missed Payment'), ('AGENT_RECOMMENDATION', 'Agent Recommendation'), ('RECYCLING', 'Recycling Activity'), ('ADJUSTMENT', 'Manual Adjustment')], max_length=30)),
                ('points_change', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('loyalty_points', models.IntegerField(default=0)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('credit_score', models.IntegerField(default=500)),
                ('card_type', models.CharField(choices=[('PREPAID', 'Prepaid'), ('POSTPAID', 'Postpaid')], default='PREPAID', max_length=10)),
                ('pin_hash', models.CharField(blank=True, max_length=128, null=True)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('postpaid_status', models.CharField(choices=[('NONE', 'Not Applied'), ('PENDING', 'Application Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='NONE', max_length=20)),
                ('joined_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.CharField(max_length=20, unique=True)),
                ('phoneNumber', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('password_hash', models.CharField(blank=True, max_length=128, null=True)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('assigned_area', models.CharField(blank=True, max_length=100, null=True)),
                ('total_recommendations', models.PositiveIntegerField(default=0)),
                ('successful_recommendations', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_agent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgentRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_recommendations', to='registration.adminuser')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_recommendations', to=settings.AUTH_USER_MODEL)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='registration.deliveryagent')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=20, unique=True)),
                ('nfc_tag_id', models.CharField(help_text='Unique identifier for the NFC tag', max_length=100, unique=True)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('LOST', 'Lost/Stolen'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=10)),
                ('tier', models.CharField(choices=[('STANDARD', 'Standard'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum')], default='STANDARD', max_length=10)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_card', to='registration.customerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CardTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('EARN', 'Earn Points'), ('REDEEM', 'Redeem Points'), ('BONUS', 'Bonus Points'), ('ADJUSTMENT', 'Points Adjustment')], max_length=10)),
                ('description', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loyalty_transactions', to='marketplace.order')),
                ('staff_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_transactions', to=settings.AUTH_USER_MODEL)),
                ('loyalty_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='registration.loyaltycard')),
            ],
        ),
        migrations.CreateModel(
            name='OTPCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('otp_timestamp', models.DateTimeField(auto_now_add=True)),
                ('otp_expiry', models.DateTimeField()),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.businessprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
