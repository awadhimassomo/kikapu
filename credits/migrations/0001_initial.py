# Generated by Django 5.2 on 2025-05-18 08:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('PREPAID', 'Prepaid'), ('POSTPAID', 'Postpaid')], max_length=10)),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('linked_cards_requested', models.PositiveSmallIntegerField(default=0, help_text='Number of additional linked cards requested')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('initial_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_confirmed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CreditScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=500)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('TOPUP', 'Top-Up'), ('PURCHASE', 'Purchase'), ('RECYCLE_REWARD', 'Recycle Reward')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HolidayDiscountCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('discount_percentage', models.PositiveIntegerField(default=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('min_credit_score', models.PositiveIntegerField(default=650)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LinkedCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=32, unique=True)),
                ('issued_to', models.CharField(help_text='Name of the person this card is issued to', max_length=100)),
                ('relationship', models.CharField(help_text='Relationship to primary cardholder (e.g., Spouse, Child)', max_length=50)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('spending_limit', models.DecimalField(decimal_places=2, default=0, help_text='Monthly spending limit for this linked card', max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='NFCCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=32, unique=True)),
                ('card_type', models.CharField(blank=True, choices=[('PREPAID', 'Prepaid'), ('POSTPAID', 'Postpaid')], max_length=10, null=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('annual_fee_paid', models.BooleanField(default=False)),
                ('last_annual_fee_date', models.DateField(blank=True, null=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=True)),
                ('passcode', models.CharField(blank=True, max_length=4, null=True)),
                ('failed_passcode_attempts', models.PositiveSmallIntegerField(default=0)),
                ('is_locked', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('unassigned', 'Unassigned'), ('assigned', 'Assigned'), ('active', 'Active'), ('expired', 'Expired'), ('blocked', 'Blocked'), ('lost', 'Lost'), ('disabled', 'Disabled')], default='unassigned', max_length=20)),
                ('uid', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('registered_by', models.CharField(blank=True, max_length=20, null=True)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_with_credits', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecyclingDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_type', models.CharField(choices=[('PLASTIC', 'Plastic'), ('PAPER', 'Paper'), ('METAL', 'Metal')], max_length=20)),
                ('weight_grams', models.PositiveIntegerField()),
                ('credits_earned', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('TOPUP', 'Top-Up'), ('PURCHASE', 'Purchase'), ('REDEEM', 'Redeem'), ('RECYCLE', 'Recycle'), ('FEE', 'Fee'), ('DISCOUNT', 'Discount'), ('CREDIT_LIMIT', 'Credit Limit Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('result', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed')], max_length=10)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('vendor_type', models.CharField(choices=[('SHOP', 'Shop'), ('MOBILE', 'Mobile'), ('STALL', 'Stall')], max_length=10)),
            ],
        ),
    ]
